% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/isoniche.R
\name{isoniche}
\alias{isoniche}
\title{isoniche}
\usage{
isoniche(mean, var, data, ...)
}
\arguments{
\item{mean}{A list of length 2 with formulas defining the models for the means along
each axis.}

\item{var}{A list of length 3 of one-sided formulas that define the models for the
scale parameters (standard deviations) along each axis as well as a model for the correlation
parameter. These must be defined, but can be set to \code{~ 1} for constant scales or correlation
across groups / individuals.}

\item{data}{Data frame with one row per individual and columns for the isotope concentrations as
well as group designations (as factors) and any control variables.}

\item{...}{Additional arguments that can be passed to the sampler. These include \code{iter}, \code{chains},
\code{thin}, \code{cores}, \code{control}. See \code{?rstan::sampling()} for more details.}
}
\value{
A fitted model object from the \pkg{rstan} package.
}
\description{
Function to fit a bivariate regression model for calculating standard ellipses
in isotopic niche comparisons.
}
\examples{

library(isoniche)
library(dplyr)
library(ggplot2)
set.seed(9986)

# Load the example data
data("eg_data")

# ggplot(dat, aes(x = V1, y = V2, color = grp)) +
#   geom_point()

# fitting the model, one bivariate normal
# distribution per group
mfit <- isoniche(
  mean = list(
    y1 ~ grp + x,
    y2 ~ grp + x
  ),
  var = list(
    ~ grp,
    ~ grp,
    ~ grp
  ),
  data = eg_data
)

# make new data for constructing ellipses
newdat <- data.frame(
  grp = unique(eg_data$grp),
  x = rep(0, length(unique(eg_data$grp)))
)

plotdf <- construct_ellipses(mfit, newdat, n = 50)

ggplot(data = eg_data, aes(x = y1, y = y2, color = grp)) +
  geom_point() +
  geom_path(
    data = plotdf,
    aes(group = ellipse_id),
    size = 0.2
  ) +
  theme_classic() +
  scale_color_manual(values = c("steelblue", "brown"))

sea_post <- sea(mfit, newdat, n = 250)

ggplot(sea_post, aes(x = sea)) +
  geom_density(aes(fill = grp), alpha = 0.5, color = "grey") +
  theme_classic() +
  scale_fill_manual(values = c("steelblue", "brown"))

}
