% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/isoniche.R
\name{isoniche}
\alias{isoniche}
\title{isoniche}
\usage{
isoniche(mean, var, data, ...)
}
\arguments{
\item{mean}{A list of length 2 with formulas defining the models for the means along
each axis.}

\item{var}{A list of length 3 of one-sided formulas that define the models for the
scale parameters (standard deviations) along each axis as well as a model for the correlation
parameter. These must be defined, but can be set to \code{~ 1} for constant scales or correlation
across groups / individuals.}

\item{data}{Data frame with one row per individual and columns for the isotope concentrations as
well as group designations (as factors) and any control variables.}

\item{...}{Additional arguments that can be passed to the sampler. These include \code{iter}, \code{chains},
\code{thin}, \code{cores}, \code{control}. See \code{?rstan::sampling()} for more details.}
}
\value{
A fitted model object from the \pkg{rstan} package.
}
\description{
Function to fit a bivariate regression model for calculating standard ellipses
in isotopic niche comparisons.
}
\examples{

library(rstan)
library(tidyverse)
library(isoniche)
set.seed(9986)

# simulating some example data
rho <- c(0, 0.5)
Omega_1 <- rbind(
  c(1, rho[1]),
  c(rho[1], 1)
)
Omega_2 <- rbind(
  c(1, rho[2]),
  c(rho[2], 1)
)
sigma_1 <- c(0.5, 0.5)
sigma_2 <- c(0.2, 1)

Sigma_1 <- diag(sigma_1) \%*\% Omega_1 \%*\% diag(sigma_1)
Sigma_2 <- diag(sigma_2) \%*\% Omega_2 \%*\% diag(sigma_2)

y_1 <- mvtnorm::rmvnorm(100, sigma = Sigma_1)
y_2 <- mvtnorm::rmvnorm(100, mean = c(1, 2), sigma = Sigma_2)

# construct the df
dat <- as_tibble(rbind(y_1, y_2))
dat <- dat \%>\% mutate(
  grp = factor(rep(c(1,2), each = 100))
)

# fitting the model, one bivariate normal
# distribution per group
mfit <- isoniche(
  mean = list(
    V1 ~ grp,
    V2 ~ grp
  ),
  var = list(
    ~ grp,
    ~ grp,
    ~ grp
  ),
  data = dat,
  cores = 4
)

# make new data for constructing ellipses
newdat <- data.frame(
  grp = unique(dat$grp)
)

plotdf <- construct_ellipses(mfit, newdat)

ggplot(data = dat, aes(x = V1, y = V2, color = grp)) +
  geom_point() +
  geom_path(
    data = plotdf,
    aes(group = ellipse_id)
  )


}
